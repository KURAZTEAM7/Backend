## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: mnoratgrgdi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      middle_name:
        name: middle_name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: wujsxnztlzuv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: sgeiyxfxlqlbbawc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: bednar.brice@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters. Must not be greater than 64 characters.'
        required: true
        example: '0u#ua6\/^PK7~OU6N-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      picture:
        name: picture
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first_name: mnoratgrgdi
      middle_name: wujsxnztlzuv
      last_name: sgeiyxfxlqlbbawc
      email: bednar.brice@example.com
      password: '0u#ua6\/^PK7~OU6N-'
    fileParameters:
      picture: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: langosh.skyla@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: D2W`PbHy|
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: langosh.skyla@example.com
      password: D2W`PbHy|
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3c1agEfVbDh8Pe465kda6vZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/vendor/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      store_name:
        name: store_name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: sftlhpddfpbmsiszmrozqj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone_number:
        name: phone_number
        description: 'Must not be greater than 15 characters.'
        required: true
        example: ctptefgcw
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: arnold05@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      logo:
        name: logo
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      zone:
        name: zone
        description: 'Must not be greater than 255 characters.'
        required: true
        example: wgeoovauscjnufvsifprzreep
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      region:
        name: region
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xkgwhbqsadajrjyabv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      google_map_location:
        name: google_map_location
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vnoixersucrsbypgzskbal
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      website:
        name: website
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: qztswsnmfbwlhquuzetak
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      telegram:
        name: telegram
        description: 'Must not be greater than 255 characters.'
        required: false
        example: hlptmubhxgmpam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      whatsapp:
        name: whatsapp
        description: 'Must not be greater than 255 characters.'
        required: false
        example: rdojzqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tin_number:
        name: tin_number
        description: 'Must be 10 characters.'
        required: true
        example: qbisjiikho
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      license:
        name: license
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: 'Aut pariatur earum soluta autem illum eligendi.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      store_name: sftlhpddfpbmsiszmrozqj
      phone_number: ctptefgcw
      email: arnold05@example.org
      zone: wgeoovauscjnufvsifprzreep
      region: xkgwhbqsadajrjyabv
      google_map_location: vnoixersucrsbypgzskbal
      website: qztswsnmfbwlhquuzetak
      telegram: hlptmubhxgmpam
      whatsapp: rdojzqa
      tin_number: qbisjiikho
      description: 'Aut pariatur earum soluta autem illum eligendi.'
    fileParameters:
      logo: null
      license: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z61a8Dhe5bEVPfdv6g43ack'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/vendor/register/bylicense
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      license_number:
        name: license_number
        description: 'Must not be greater than 255 characters.'
        required: true
        example: seafnkfjggd
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      logo:
        name: logo
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      license:
        name: license
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      license_number: seafnkfjggd
    fileParameters:
      logo: null
      license: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PdZ8DhcEe65b1V3fagvk6a4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/vendor/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/vendor/search/{name}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      name:
        name: name
        description: ''
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      name: quaerat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"No match found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/vendor/products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h1ga4kEaDVfcPZ8vdeb5663'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/vendor/orders
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aP6ZVgEa4ek351bdc8hf6Dv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/vendor/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the vendor.'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"Vendor cannot be found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/vendor
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Pg4cfaEDVZ5a1h3d8kbev6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/category/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/category/products/{category_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_slug:
        name: category_slug
        description: 'The slug of the category.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      category_slug: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"Category does not exist"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/product/search
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      barcode:
        name: barcode
        description: 'Must be at least 5 characters. Must not be greater than 15 characters.'
        required: false
        example: dy
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      query:
        name: query
        description: 'Must be at least 1 character.'
        required: false
        example: nxaclvzphwkkhmenglvjfjjfnrtngpvmgvyprhqbbljzdyryfczoeswhbwzjyvdujbpnfu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      min:
        name: min
        description: 'Must be at least 0.'
        required: false
        example: 48
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      max:
        name: max
        description: 'Must be at least 0.'
        required: false
        example: 3
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      barcode: dy
      query: nxaclvzphwkkhmenglvjfjjfnrtngpvmgvyprhqbbljzdyryfczoeswhbwzjyvdujbpnfu
      min: 48
      max: 3
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"Validation failed","errors":{"barcode":["The barcode field must be at least 5 characters."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/product/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/product/add
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: lmayhoarkroejtaoqkij
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Vitae fugiat impedit necessitatibus quos.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: 3583.13951
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      flexible_pricing:
        name: flexible_pricing
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      brand:
        name: brand
        description: ''
        required: false
        example: aperiam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      model:
        name: model
        description: ''
        required: false
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      images:
        name: images
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      barcode_upc:
        name: barcode_upc
        description: 'image validation. Must be 12 characters.'
        required: false
        example: gbktrjigoudy
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      barcode_eac:
        name: barcode_eac
        description: 'Must be 13 characters.'
        required: false
        example: umxoxruowuqma
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      remaining_stock:
        name: remaining_stock
        description: 'Must be at least 0.'
        required: true
        example: 51
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: lmayhoarkroejtaoqkij
      description: 'Vitae fugiat impedit necessitatibus quos.'
      price: 3583.13951
      flexible_pricing: true
      brand: aperiam
      model: odit
      barcode_upc: gbktrjigoudy
      barcode_eac: umxoxruowuqma
      remaining_stock: 51
      category_id: aut
    fileParameters:
      images:
        - null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6c5gfh64e13dkb8VPDZvEaa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/product/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"Product cannot be found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/product/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gEv61e4Ddk6bf8Z5VPcah3a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user/orders
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ev3V1a6fgc8DdZEPak465hb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/orders/add
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_id:
        name: product_id
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      product_id: et
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bg386dP5vfka46eDcZaEh1V'
    controller: null
    method: null
    route: null
    custom: []
