openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/auth/register:
    post:
      summary: ''
      operationId: postApiAuthRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: hjzkpuyswxtrfiqxmcxhrel
                middle_name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: icxnysfgnbugrhp
                last_name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: xjtx
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: oscar.pfannerstill@example.net
                password:
                  type: string
                  description: 'Must be at least 8 characters. Must not be greater than 64 characters.'
                  example: LTI(Qs
                picture:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
              required:
                - first_name
                - middle_name
                - last_name
                - email
                - password
      security: []
  /api/auth/login:
    post:
      summary: ''
      operationId: postApiAuthLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: davis.sage@example.org
                password:
                  type: string
                  description: ''
                  example: "J-ubt3G4Bul0^$'"
              required:
                - email
                - password
      security: []
  /api/auth/logout:
    post:
      summary: ''
      operationId: postApiAuthLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/vendor/register:
    post:
      summary: ''
      operationId: postApiVendorRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                store_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mr
                phone_number:
                  type: string
                  description: 'Must not be greater than 15 characters.'
                  example: bcmmxhpsyqvdwer
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: dexter73@example.org
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                zone:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zsjujqevkao
                region:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: timnjfwspyjfntgwppkmbsgv
                google_map_location:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mppcjxijdue
                website:
                  type: string
                  description: 'Must be a valid URL. Must not be greater than 255 characters.'
                  example: iafzgnejytmfquocjjbqbzfh
                telegram:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ixwjmgctfdpsfslhspjfqkfdc
                whatsapp:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: oijejzbiedyhleintylr
                tin_number:
                  type: string
                  description: 'Must be 10 characters.'
                  example: aibhomkjwa
                license:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Voluptatem placeat corrupti ut.'
              required:
                - store_name
                - phone_number
                - email
                - zone
                - region
                - tin_number
                - license
  /api/vendor/list:
    get:
      summary: ''
      operationId: getApiVendorList
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 62
                  data: []
                  first_page_url: 'http://localhost/api/vendor/list?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'http://localhost/api/vendor/list?page=1'
                  links:
                    -
                      url: 'http://localhost/api/vendor/list?page=61'
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://localhost/api/vendor/list?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://localhost/api/vendor/list'
                  per_page: 64
                  prev_page_url: 'http://localhost/api/vendor/list?page=61'
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 62
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'http://localhost/api/vendor/list?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://localhost/api/vendor/list?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'http://localhost/api/vendor/list?page=61'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/vendor/list?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: 'http://localhost/api/vendor/list?page=61'
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://localhost/api/vendor/list'
                  per_page:
                    type: integer
                    example: 64
                  prev_page_url:
                    type: string
                    example: 'http://localhost/api/vendor/list?page=61'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 62
                per_page:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 64
      security: []
  '/api/vendor/search/{name}':
    get:
      summary: ''
      operationId: getApiVendorSearchName
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No match found'
                properties:
                  message:
                    type: string
                    example: 'No match found'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: name
        description: ''
        example: voluptatibus
        required: true
        schema:
          type: string
  '/api/vendor/{id}':
    get:
      summary: ''
      operationId: getApiVendorId
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendor cannot be found'
                properties:
                  message:
                    type: string
                    example: 'Vendor cannot be found'
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiVendorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the vendor.'
        example: 17
        required: true
        schema:
          type: integer
  /api/category/list:
    get:
      summary: ''
      operationId: getApiCategoryList
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - Endpoints
      security: []
  '/api/category/products/{category_slug}':
    get:
      summary: ''
      operationId: getApiCategoryProductsCategory_slug
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Category does not exist'
                properties:
                  message:
                    type: string
                    example: 'Category does not exist'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 68
                per_page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 68
      security: []
    parameters:
      -
        in: path
        name: category_slug
        description: 'The slug of the category.'
        example: quasi
        required: true
        schema:
          type: string
  /api/product/list:
    get:
      summary: ''
      operationId: getApiProductList
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 10
                  data: []
                  first_page_url: 'http://localhost/api/product/list?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'http://localhost/api/product/list?page=1'
                  links:
                    -
                      url: 'http://localhost/api/product/list?page=9'
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://localhost/api/product/list?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://localhost/api/product/list'
                  per_page: 44
                  prev_page_url: 'http://localhost/api/product/list?page=9'
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 10
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'http://localhost/api/product/list?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://localhost/api/product/list?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'http://localhost/api/product/list?page=9'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/product/list?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: 'http://localhost/api/product/list?page=9'
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://localhost/api/product/list'
                  per_page:
                    type: integer
                    example: 44
                  prev_page_url:
                    type: string
                    example: 'http://localhost/api/product/list?page=9'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 10
                per_page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 44
      security: []
  /api/product/add:
    post:
      summary: ''
      operationId: postApiProductAdd
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jgaxmyrkghpjmxjqweydu
                description:
                  type: string
                  description: ''
                  example: 'Rerum quam sunt dignissimos nostrum.'
                price:
                  type: number
                  description: ''
                  example: 391484425.4572
                flexible_pricing:
                  type: boolean
                  description: ''
                  example: true
                brand:
                  type: string
                  description: ''
                  example: nostrum
                model:
                  type: string
                  description: ''
                  example: mollitia
                images:
                  type: array
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  items:
                    type: string
                    format: binary
                barcode_upc:
                  type: string
                  description: 'image validation. Must be 12 characters.'
                  example: ywfaxphwjcpg
                barcode_eac:
                  type: string
                  description: 'Must be 13 characters.'
                  example: gbsguhzlndceb
                remaining_stock:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 49
                tags:
                  type: object
                  description: ''
                  example: null
                  properties: {  }
                category_id:
                  type: string
                  description: ''
                  example: ducimus
              required:
                - title
                - price
                - flexible_pricing
                - remaining_stock
                - category_id
  '/api/product/{id}':
    delete:
      summary: ''
      operationId: deleteApiProductId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 11
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
